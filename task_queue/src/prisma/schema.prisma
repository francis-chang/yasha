generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PG_URL")
}

model Team {
  TeamID           Int    @id
  Key              String
  City             String
  Name             String
  stadium          String
  Conference       String
  Division         String
  inner_color      String
  outer_color      String
  WikipediaLogoUrl String
  Wins             Int
  Losses           Int
  home_games       Game[] @relation("home_games")
  away_games       Game[] @relation("away_games")

  team_game_stats     TeamStats[] @relation("team_game_stats")
  opponent_team_stats TeamStats[] @relation("opponent_team_stats")
}

model Game {
  GameID               Int         @id
  Season               Int
  SeasonType           Int
  Status               String
  Channel              String
  Day                  DateTime
  DateTime             DateTime
  AwayTeamID           Int
  HomeTeamID           Int
  away_team            Team        @relation("away_games", fields: [AwayTeamID], references: [TeamID])
  home_team            Team        @relation("home_games", fields: [HomeTeamID], references: [TeamID])
  stadium              String
  city                 String
  AwayTeamScore        Int?
  HomeTeamScore        Int?
  Quarter              String?
  TimeRemainingMinutes String?
  TimeRemainingSeconds String?
  Quarters             Json?
  CrewChiefID          Int?
  crewchief            Referee?    @relation("crewchief_games", fields: [CrewChiefID], references: [RefereeID])
  UmpireID             Int?
  umpire               Referee?    @relation("umpire_games", fields: [UmpireID], references: [RefereeID])
  RefereeID            Int?
  referee              Referee?    @relation("referee_games", fields: [RefereeID], references: [RefereeID])
  team_stats           TeamStats[]
}

model TeamStats {
  StatID                        Int     @id
  TeamID                        Int
  team                          Team    @relation("team_game_stats", fields: [TeamID], references: [TeamID])
  Season                        Int
  Name                          String
  Team                          String
  Wins                          Int
  Losses                        Int
  GameID                        Int
  game                          Game    @relation(fields: [GameID], references: [GameID])
  OpponentID                    Int
  opponent_team                 Team    @relation("opponent_team_stats", fields: [OpponentID], references: [TeamID])
  Opponent                      String
  HomeOrAway                    String
  IsGameOver                    Boolean
  FieldGoalsMade                Int
  FieldGoalsAttempted           Int
  FieldGoalsPercentage          Decimal @db.Decimal(4, 1)
  EffectiveFieldGoalsPercentage Decimal @db.Decimal(4, 1)
  TwoPointersMade               Int
  TwoPointersAttempted          Int
  TwoPointersPercentage         Decimal @db.Decimal(4, 1)
  ThreePointersMade             Int
  ThreePointersAttempted        Int
  ThreePointersPercentage       Decimal @db.Decimal(4, 1)
  FreeThrowsMade                Int
  FreeThrowsAttempted           Int
  FreeThrowsPercentage          Decimal @db.Decimal(4, 1)
  OffensiveRebounds             Int
  DefensiveRebounds             Int
  Rebounds                      Int
  Assists                       Int
  Steals                        Int
  BlockedShots                  Int
  Turnovers                     Int
  PersonalFouls                 Int
  Points                        Int
  TrueShootingPercentage        Decimal @db.Decimal(4, 1)
  FantasyPointsFanDuel          Decimal @db.Decimal(4, 1)
  FantasyPointsDraftKings       Decimal @db.Decimal(4, 1)
  FantasyPointsYahoo            Decimal @db.Decimal(4, 1)
}

model Referee {
  RefereeID       Int    @id
  Name            String
  Number          Int
  referee_games   Game[] @relation("referee_games")
  umpire_games    Game[] @relation("umpire_games")
  crewchief_games Game[] @relation("crewchief_games")
}
